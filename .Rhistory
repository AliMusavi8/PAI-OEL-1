# 1. Load the dataset into R
# Assuming the dataset "World Happiness Report 2024.csv" is in your working directory
data <- read.csv("World Happiness Report 2024.csv")
# 1. Load the dataset into R
# Assuming the dataset "World Happiness Report 2024.csv" is in your working directory
data <- read.csv("WHR2024.csv")
# 2. Display the first 5 rows (head())
head(data, n = 5)
# 3. Get basic summary statistics (summary())
summary(data)
# 4. Identify missing values (colSums(is.na(data)))
missing_values <- colSums(is.na(data))
print("Missing values per column:")
print(missing_values)
# 5. Save the cleaned dataset as cleaned_happiness.csv
# Assuming you performed cleaning steps (e.g., handling missing values)
# For this example, we will save the original dataset as "cleaned_happiness.csv"
# If you performed cleaning, replace 'data' with your cleaned dataframe name
write.csv(data, "cleaned_happiness.csv", row.names = FALSE)
cat("Cleaned dataset saved as cleaned_happiness.csv in the working directory.\n")
source("C:/Users/Student/Desktop/Ali Musavi OEL/OEL/Taks_1.R")
# 4. Identify missing values
missing_values <- colSums(is.na(data))
print("Missing values per column:")
print(missing_values)
---
title: "Report"
**To generate the HTML file from this R Markdown code:**
1.  **Save the code:** Save the code above as an `.Rmd` file (e.g., `happiness_report_analysis.Rmd`).
RStudio will then process the R Markdown file, execute the R code chunks, and generate an HTML file (named `happiness_report_analysis.html` by default, unless you specified otherwise in the YAML header) in the same directory as your `.Rmd` file. This HTML file will contain the narrative text along with the output of the R code (the first 5 rows, summary statistics, missing value counts, and a message indicating the file was saved)
RStudio will then process the R Markdown file, execute the R code chunks, and generate an HTML file (named `happiness_report_analysis.html` by default, unless you specified otherwise in the YAML header) in the same directory as your `.Rmd` file. This HTML file will contain the narrative text along with the output of the R code (the first 5 rows, summary statistics, missing value counts, and a message indicating the file was saved)
RStudio will then process the R Markdown file, execute the R code chunks, and generate an HTML file (named `happiness_report_analysis.html` by default, unless you specified otherwise in the YAML header) in the same directory as your `.Rmd` file. This HTML file will contain the narrative text along with the output of the R code (the first 5 rows, summary statistics, missing value counts, and a message indicating the file was saved)
---
title: "Initial Exploration of World Happiness Report 2024"
---
title: "Initial"
---
title: "Report"
---
title: "Report"
\`\`\`{r setup, include=FALSE} knitr::opts_chunk\$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
head(data, n = 5)
head(data, n = 5)
head(data, n = 5)
head(data, n = 5)
head(data, n = 5)
head(data, n = 5)
head(data, n = 5)
# 1. Load required libraries
library(ggplot2)
# 2. Load the dataset
data <- read.csv("GlobalTemperatures.csv")  # Replace with actual file name
# 2. Load the dataset
data <- read.csv("GlobalTemperatures.csv")  # Replace with actual file name
# 2. Load the dataset
data1 <- read.csv("GlobalTemperatures.csv")  # Replace with actual file name
# 2. Load the dataset
data <- read.csv("GlobalTemperatures.csv")  # Replace with actual file name
# 3. Display first few rows
head(data, n = 5)
# 4. Get basic summary statistics
summary(data)
# 5. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Save the plot
ggsave("temperature_trend.png", plot = temperature_plot, width = 8, height = 5)
# 6. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = CO2Emissions, y = TemperatureAnomaly)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "CO₂ Emissions vs. Temperature Anomaly",
x = "CO₂ Emissions (Million Metric Tons)",
y = "Temperature Anomaly (°C)") +
theme_minimal()
# Save the scatter plot
ggsave("co2_vs_temp.png", plot = scatter_plot, width = 8, height = 5)
# Print completion message
cat("Analysis complete. Plots saved as 'temperature_trend.png' and 'co2_vs_temp.png'.\n")
# 5. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Save the plot
ggsave("temperature_trend.png", plot = temperature_plot, width = 8, height = 5)
# 6. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = CO2Emissions, y = TemperatureAnomaly)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "CO₂ Emissions vs. Temperature Anomaly",
x = "CO₂ Emissions (Million Metric Tons)",
y = "Temperature Anomaly (°C)") +
theme_minimal()
# Save the scatter plot
ggsave("co2_vs_temp.png", plot = scatter_plot, width = 8, height = 5)
# Save the scatter plot
ggsave("co2_vs_temp.png", plot = scatter_plot, width = 8, height = 5)
# Print completion message
cat("Analysis complete. Plots saved as 'temperature_trend.png' and 'co2_vs_temp.png'.\n")
source("C:/Users/Student/Desktop/Ali Musavi OEL/OEL/Task2.R")
# 1. Load required libraries
library(ggplot2)
# 2. Load the dataset
data <- read.csv("GlobalTemperatures.csv")  # Replace with actual file name
# 3. Display first few rows
head(data, n = 5)
# 4. Get basic summary statistics
summary(data)
# 5. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Show the plot in RStudio plot window
print(temperature_plot)
# Save the plot
ggsave("temperature_trend.png", plot = temperature_plot, width = 8, height = 5)
# Save the plot
ggsave("temperature_trend.png", plot = temperature_plot, width = 8, height = 5)
# 6. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = CO2Emissions, y = TemperatureAnomaly)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "CO₂ Emissions vs. Temperature Anomaly",
x = "CO₂ Emissions (Million Metric Tons)",
y = "Temperature Anomaly (°C)") +
theme_minimal()
# Show the scatter plot in RStudio plot window
print(scatter_plot)
# Save the scatter plot
ggsave("co2_vs_temp.png", plot = scatter_plot, width = 8, height = 5)
# Print completion message
cat("Analysis complete. Plots displayed and saved as 'temperature_trend.png' and 'co2_vs_temp.png'.\n")
# 5. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Show the plot in RStudio plot window
print(temperature_plot)
# Load required libraries
library(ggplot2)
library(dplyr)  # For data manipulation
# Load dataset
data <- read.csv("GlobalTemperatures.csv")
# Convert dt column to Date type
data$dt <- as.Date(data$dt)
# Remove missing values
data <- na.omit(data)
# Plot with proper date handling
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Show the plot
print(temperature_plot)
# Load required libraries
library(ggplot2)
library(dplyr)  # For data manipulation
# Load dataset
data <- read.csv("GlobalTemperatures.csv")
# Convert dt column to Date type
data$dt <- as.Date(data$dt)
# Remove missing values
data <- na.omit(data)
# 1. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Show the temperature trend plot
print(temperature_plot)
# 2. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = CO2Emissions, y = TemperatureAnomaly)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "CO₂ Emissions vs. Temperature Anomaly",
x = "CO₂ Emissions (Million Metric Tons)",
y = "Temperature Anomaly (°C)") +
theme_minimal()
# Show the scatter plot
print(scatter_plot)
head(data, n = 5)
# 2. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "CO₂ Emissions vs. Temperature Anomaly",
x = "CO₂ Emissions (Million Metric Tons)",
y = "Temperature Anomaly (°C)") +
theme_minimal()
# Show the scatter plot
print(scatter_plot)
# 2. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "Date vs Land Average Temperature",
x = "Date",
y = "Land Average Temperature") +
theme_minimal()
# Show the scatter plot
print(scatter_plot)
# Load required libraries
library(ggplot2)
library(dplyr)  # For data manipulation
# Load dataset
data <- read.csv("GlobalTemperatures.csv")
head(data, n = 5)
# Convert dt column to Date type
data$dt <- as.Date(data$dt)
# Remove missing values
data <- na.omit(data)
# 1. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Show the temperature trend plot
print(temperature_plot)
# 2. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "Date vs Land Average Temperature",
x = "Date",
y = "Land Average Temperature") +
theme_minimal()
# Show the scatter plot
print(scatter_plot)
source("C:/Users/Student/Desktop/Ali Musavi OEL/OEL/Task2.R")
# Load required libraries
library(ggplot2)
library(dplyr)  # For data manipulation
# Load dataset
data <- read.csv("GlobalTemperatures.csv")
head(data, n = 5)
# Convert dt column to Date type
data$dt <- as.Date(data$dt)
# Remove missing values
data <- na.omit(data)
# 1. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Show the temperature trend plot
print(temperature_plot)
# 2. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "Date vs Land Average Temperature",
x = "Date",
y = "Land Average Temperature") +
theme_minimal()
# Show the scatter plot
print(scatter_plot)
# Remove missing values
data <- na.omit(data)
# 1. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Show the temperature trend plot
print(temperature_plot)
ggsave("temperature_trend.png", plot = temperature_plot, width = 8, height = 5)
# Remove missing values
data <- na.omit(data)
# 1. Line Chart: Global Temperature Change Over Time
temperature_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_line(color = "blue") +
labs(title = "Global Temperature Change Over Time",
x = "Year",
y = "Average Land Temperature (°C)") +
theme_minimal()
# Show the temperature trend plot
print(temperature_plot)
ggsave("temperature_trend.png", plot = temperature_plot, width = 8, height = 5)
# 2. Scatter Plot: CO₂ Emissions vs. Temperature Anomaly
# Assuming the dataset has 'CO2Emissions' and 'TemperatureAnomaly' columns
scatter_plot <- ggplot(data, aes(x = dt, y = LandAverageTemperature)) +
geom_point(color = "red", alpha = 0.6) +
labs(title = "Date vs Land Average Temperature",
x = "Date",
y = "Land Average Temperature") +
theme_minimal()
# Show the scatter plot
print(scatter_plot)
ggsave("co2_vs_temp.png", plot = scatter_plot, width = 8, height = 5)
